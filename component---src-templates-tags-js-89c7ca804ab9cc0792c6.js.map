{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./config.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SearchBox/index.js","webpack:///./src/components/NavBar/index.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Layout/index.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","className","frontmatter","title","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","style","marginBottom","Component","tagPageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteTitle","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleTagManagerID","disqusShortname","userName","userTwitter","userLocation","userDescription","copyright","themeColor","backgroundColor","m","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SearchBox","_this","_Component","call","getOrCreateIndex","index","Index","load","searchIndex","search","evt","target","value","setState","results","expand","ref","documentStore","getDoc","isActive","state","react_default","type","onChange","placeholder","page","gatsby_browser_entry","id","NavBar","toggleNavbar","aria-label","data-target","onClick","SearchBox_SearchBox","siteSearchIndex","_1346230460","Footer","config","href","Layout","bind","assertThisInitialized_default","_this2","react","Helmet_default","name","content","components_NavBar","components_Footer"],"mappings":"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","file":"component---src-templates-tags-js-89c7ca804ab9cc0792c6.js","sourcesContent":["import React, {Component} from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {Link, graphql} from 'gatsby'\r\nimport Layout from '../components/Layout'\r\n\r\nclass TagRoute extends Component {\r\n  render () {\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const postLinks = posts.map(post => (\r\n      <li key={post.node.fields.slug}>\r\n        <Link to={post.node.fields.slug}>\r\n          <h2 className='is-size-2'>{post.node.frontmatter.title}</h2>\r\n        </Link>\r\n      </li>\r\n    ))\r\n    const tag = this.props.pageContext.tag\r\n    const title = this.props.data.site.siteMetadata.title\r\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\r\n    const tagHeader = `${totalCount} post${\r\n      totalCount === 1 ? '' : 's'\r\n    } tagged with “${tag}”`\r\n\r\n    return (\r\n      <Layout>\r\n        <section className='section'>\r\n          <Helmet title={`${tag} | ${title}`} />\r\n          <div className='container content'>\r\n            <div className='columns'>\r\n              <div\r\n                className='column is-10 is-offset-1'\r\n                style={{ marginBottom: '6rem' }}\r\n              >\r\n                <h3 className='title is-size-4 is-bold-light'>{tagHeader}</h3>\r\n                <ul className='taglist'>{postLinks}</ul>\r\n                <p>\r\n                  <Link to='/tags/'>Browse all tags</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TagRoute\r\n\r\nexport const tagPageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\r\n  siteTitle: 'Gatsby Starter Business', // Site title.\r\n  siteTitleAlt: 'Business', // Alternative site title for SEO.\r\n  siteLogo: '/icons/icon-512x512.png', // Logo used for SEO and manifest.\r\n  siteUrl: 'https://gatsby-starter-business.netlify.com', // Domain of your website without pathPrefix.\r\n  pathPrefix: '/', // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-business/.\r\n  siteDescription: 'Leverage Gatsby Business Starter for your Business.', // Website description used for RSS feeds/meta description tag.\r\n  siteRss: '/rss.xml',\r\n  siteFBAppID: '', // FB Application ID for using app insights\r\n  googleTagManagerID: '', // GTM tracking ID.\r\n  disqusShortname: 'gatsby-business-starter', // Disqus shortname.\r\n  userName: 'Vaibhav Sharma',\r\n  userTwitter: 'vaibhaved',\r\n  userLocation: 'Delhi NCR, India',\r\n  userDescription: '',\r\n  copyright: 'Copyright © Gatsby Starter Business 2018-2019. All Rights Reserved.', // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: '#00d1b2', // Used for setting manifest and progress theme colors.\r\n  backgroundColor: '#ffffff', // Used for setting manifest background color.\r\n}\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Index } from 'elasticlunr'\r\n\r\nexport default class SearchBox extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      query: ``,\r\n      results: [],\r\n      isActive: false,\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className={`navbar-item ${this.state.isActive ? 'is-active' : ''}`}>\r\n        <input\r\n          className='input navbar-link is-rounded is-primary'\r\n          type='text'\r\n          value={this.state.query}\r\n          onChange={this.search}\r\n          placeholder='Search'\r\n        />\r\n        <div className='navbar-dropdown'>\r\n          {this.state.results.map(page => (\r\n            <Link className='navbar-item' key={page.id} to={page.slug}>{page.title}</Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getOrCreateIndex = () =>\r\n    this.index\r\n      ? this.index\r\n      : Index.load(this.props.searchIndex);\r\n\r\n  search = evt => {\r\n    const query = evt.target.value\r\n    this.index = this.getOrCreateIndex()\r\n    this.setState({\r\n      query,\r\n      // Query the index with search string to get an [] of IDs\r\n      results: this.index\r\n        .search(query, { expand: true }) // Accept partial matches\r\n        // Map over each ID and return the full document\r\n        .map(({ ref }) => this.index.documentStore.getDoc(ref)),\r\n      isActive: !!query,\r\n    })\r\n  };\r\n}\r\n","import React from 'react'\r\nimport {Link, graphql, StaticQuery} from 'gatsby'\r\nimport SearchBox from '../SearchBox'\r\n\r\nconst NavBar = ({toggleNavbar, isActive}) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n            query SearchIndexQuery {\r\n                siteSearchIndex {\r\n                    index\r\n                }\r\n            }\r\n        `}\r\n    render={data => (\r\n      <nav className='navbar is-fixed-top' aria-label='main navigation'>\r\n        <div className='navbar-brand'>\r\n          <Link to='/' className='navbar-item'>\r\n            <strong>Gatsby Starter Business</strong>\r\n          </Link>\r\n          <button\r\n            className={`button navbar-burger ${isActive ? 'is-active' : ''}`}\r\n            data-target='navMenu'\r\n            onClick={toggleNavbar}\r\n          >\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </button>\r\n        </div>\r\n        <div className={`navbar-menu ${isActive ? 'is-active' : ''}`} id='navMenu'>\r\n\r\n          <div className='navbar-end'>\r\n            <SearchBox searchIndex={data.siteSearchIndex.index} />\r\n            <Link className='navbar-item' to='/about'>\r\n                            About\r\n            </Link>\r\n            <Link className='navbar-item' to='/pricing'>\r\n                            Pricing\r\n            </Link>\r\n            <Link className='navbar-item' to='/blog'>\r\n                            Blog\r\n            </Link>\r\n            <div className='navbar-item'>\r\n              <div className='field is-grouped'>\r\n                <p className='control'>\r\n                  <Link\r\n                    className='button is-primary is-outlined'\r\n                    to='/contact'>\r\n                            Contact Us\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport config from '../../../config'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='container'>\r\n        <div className='content has-text-centered'>\r\n          <p>\r\n            {config.copyright}\r\n          </p>\r\n          <p>Powered by <a href='https://www.gatsbyjs.org'>Gatsby</a> and <a href='https://www.netlifycms.org'>Netlify CMS</a> | <a href='https://github.com/v4iv/gatsby-starter-business'>Github Repository</a></p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component, Fragment } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport '../../assets/sass/styles.sass'\r\nimport config from '../../../config'\r\nimport NavBar from '../NavBar'\r\nimport Footer from '../Footer'\r\n\r\nclass Layout extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {isActive: false}\r\n    this.toggleNavbar = this.toggleNavbar.bind(this)\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({isActive: !this.state.isActive})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>{config.siteTitle}</title>\r\n          <meta name='description' content={config.siteDescription} />\r\n        </Helmet>\r\n        <NavBar isActive={this.state.isActive} toggleNavbar={() => this.toggleNavbar()} />\r\n        <Fragment>{this.props.children}</Fragment>\r\n        <Footer />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}